{"version":3,"sources":["./src/app/services/countries.service.ts","./src/environments/environment.ts","./src/app/pages/country/country.component.html","./src/app/pages/country/country.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/countries/countries.component.html","./src/app/pages/countries/countries.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAM,GAAG,GAAG,8BAA8B,CAAC;AAE3C,wEAAwE;AAKjE,MAAM,gBAAgB;IAG3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,cAAS,GAAe,EAAE,CAAC;IAEI,CAAC;IAExC,YAAY;QACV,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACxC;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,SAAqB,EAAE,EAAE;gBAClE,+BAA+B;gBAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,OAAO,CAAC,SAAS,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;YAChE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;YAC3D,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,IAAY;QAEzB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAE7B,IAAG,CAAC,IAAI;gBAAE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,UAAU,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,OAAiB,EAAE,EAAE;gBACpE,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAC,CAAC,CAAC;YAC/E,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;gFAzCU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;ICfnE,qEAAoB;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,oFAAkB;;;IAwBhC,wEAAuE;IACrE,qEAME;IACF,uDACA;IACF,4DAAK;;;IAPD,0DAAmB;IAAnB,4IAAmB;IAKrB,0DACA;IADA,wGACA;;;IAVJ,wEAAmD;IACjD,uHAUK;IACP,4DAAK;;;IAX4C,0DAAsB;IAAtB,+FAAsB;;;IArB3E,yEAAsD;IACpD,yEAAmB;IACjB,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IAEpB,wEAAuB;IACrB,wEAA4B;IAC1B,uDACF;;IAAA,4DAAK;IACL,wEAA4B;IAAA,uDAAiC;;IAAA,4DAAK;IAClE,yEAA4B;IAAA,wDAAqC;IAAA,4DAAK;IACtE,yEAA4B;IAAA,wDAAiC;IAAA,4DAAK;IAClE,yEAA4B;IAC1B,wDAGF;IAAA,4DAAK;IACP,4DAAK;IAEL,iEAAM;IACN,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,kHAYK;IACP,4DAAM;IACN,0EAAmB;IACjB,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IAEb,qEAA8D;IAC9D,iEAAM;IACN,iEAAM;IACN,wEAAmD;IAAC,oEAAO;IAAA,4DAAI;IACjE,4DAAM;IACR,4DAAM;;;IApCE,0DACF;IADE,kLACF;IAC4B,0DAAiC;IAAjC,sKAAiC;IACjC,0DAAqC;IAArC,gHAAqC;IACrC,0DAAiC;IAAjC,4GAAiC;IAE3D,0DAGF;IAHE,iKAGF;IAKG,0DAAyB;IAAzB,4FAAyB;IAiBzB,0DAAoB;IAApB,iJAAoB;;AC9BtB,MAAM,gBAAgB;IAG3B,YACS,gBAAkC,EACjC,cAA8B,EAC9B,MAAc;QAFf,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEC,QAAQ;;YACZ,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE3D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YAE/D,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aACvC;YAED,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnB,OAAO,CAAC,WAAW,IAAG,MAAM,OAAO,CAAC,GAAG,CACrC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAO,MAAM,EAAE,EAAE,CAAC;oBACpC,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAE5D,CAAC,EAAC,CACyB,EAAC;gBAC5B,oCAAoC;aAEvC;YAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAEvB,wBAAwB;QAC1B,CAAC;KAAA;;gFAhCU,gBAAgB;gGAAhB,gBAAgB;QDV7B,0GAA2C;QAC3C,gEAAM;QAEN,8GA0CM;;QA7CD,6EAAa;QAGZ,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;;;;;;;AEIZ,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAAgC;;;;;;;;;;;;;;ACChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;AACsB;AACM;AACnB;AACA;AACM;AACJ;;;AAsBnD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAXJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE;gBAC7C,OAAO,EAAE,qEAAW,CAAC,UAAU;gBAC/B,kEAAkE;gBAClE,+CAA+C;gBAC/C,oBAAoB,EAAE,0BAA0B;aACjD,CAAC;SACH;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,iFAAgB;QAChB,uFAAkB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;ICdlB,wEAA0G;IACxG,uEAAoD;IAChD,uDACJ;IAAA,4DAAI;IACN,4DAAK;;;IAHA,0DAA+C;IAA/C,oKAA+C;IAC9C,0DACJ;IADI,2FACJ;;ACAG,MAAM,kBAAkB;IAI7B,YACS,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH3C,cAAS,GAAe,EAAE,CAAC;IAIvB,CAAC;IAEC,QAAQ;;YACZ,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;YAE5D,+BAA+B;QACjC,CAAC;KAAA;;oFAZU,kBAAkB;kGAAlB,kBAAkB;QDP/B,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,gEAAI;QAEJ,wEAAuB;QACrB,4GAIK;QACP,4DAAK;;QALyF,0DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;AEL1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACoB;AACN;;;AAErE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,iFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,uFAAkB;KAC9B;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,EAC9B,4DAAY;mIAEZ,gBAAgB,uFAFhB,4DAAY;;;;;;;;;;;;;;;;;;;ACtBsB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ICountry, BordersFlag } from '../interfaces/country.interface';\n\nconst URL = 'https://restcountries.com/v2';\n\n// https://restcountries.com/v2/{service}?fields={field},{field},{field}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountriesService {\n  private countries: ICountry[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getCountries(): Promise<ICountry[]> {\n    if (this.countries.length > 0) {\n      return Promise.resolve(this.countries);\n    }\n\n    return new Promise((resolve) => {\n      this.http.get(`${URL}/lang/es`).subscribe((countries: ICountry[]) => {\n        // console.log(this.countries);\n        this.countries = countries;\n        resolve(countries);\n      });\n    });\n  }\n\n  getCountryById(id: string): Promise<ICountry> {\n    if (this.countries.length > 0) {\n      const country = this.countries.find((c) => c.alpha3Code === id);\n      return Promise.resolve(country);\n    }\n\n    return this.getCountries().then((countries) => {\n      const country = countries.find((c) => c.alpha3Code === id);\n      return Promise.resolve(country);\n    });\n  }\n\n  getCountryFlag(code: string): Promise<BordersFlag> {\n\n    return new Promise((resolve) => {\n\n      if(!code) return resolve(null);\n\n      this.http.get(`${URL}/alpha/${code}`).subscribe((country: ICountry) => {\n        resolve({ name: country.name, flag: country.flag, code: country.alpha3Code});\n      });\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h1 *ngIf=\"country\">{{ country.name }}</h1>\n<hr />\n\n<div *ngIf=\"country\" class=\"row animated fadeIn fast\">\n  <div class=\"col-7\">\n    <h5>Information</h5>\n\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">\n        Population: {{ country.population | number }}\n      </li>\n      <li class=\"list-group-item\">Area: {{ country.area | number }}</li>\n      <li class=\"list-group-item\">Area Code: {{ country.callingCodes }}</li>\n      <li class=\"list-group-item\">TimeZone: {{ country.timezones }}</li>\n      <li class=\"list-group-item\">\n        Currency: {{ country.currencies[0].name }} ({{\n          country.currencies[0].code\n        }})\n      </li>\n    </ul>\n\n    <hr />\n    <h5>Borders</h5>\n    <ul *ngIf=\"country.bordersFlag\" class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let border of country.bordersFlag\">\n        <img\n          class=\"img-fluid\"\n          [src]=\"border.flag\"\n          height=\"35px\"\n          width=\"35px\"\n          [alt]=\"border.name\"\n        />\n        &nbsp; &nbsp; {{ border.name }}\n        <!-- <a [routerLink]=\"['/country', border.code]\">{{ border.name }}</a> -->\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-5\">\n    <h5>Flag</h5>\n\n    <img [src]=\"country.flag\" class=\"flag\" [alt]=\"country.name\" />\n    <br />\n    <br />\n    <a routerLink=\"/\" class=\"btn btn-danger btn-block\"> Return </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ICountry, BordersFlag } from 'src/app/interfaces/country.interface';\nimport { CountriesService } from '../../services/countries.service';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css'],\n})\nexport class CountryComponent implements OnInit {\n  country: ICountry;\n\n  constructor(\n    public countriesService: CountriesService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  async ngOnInit(): Promise<void | boolean> {\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    const country = await this.countriesService.getCountryById(id);\n\n    if (!country) {\n      return this.router.navigateByUrl('/');\n    }\n\n    if (country.borders) {\n      country.bordersFlag = await Promise.all(\n        country.borders.map(async (border) => {\n          return await this.countriesService.getCountryFlag(border);\n          \n        })\n      ) as unknown as BordersFlag[];\n        // console.log(country.bordersFlag);\n\n    }\n\n    this.country = country;\n\n    // console.log(country);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'countries';\n}\n","<router-outlet ></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { CountryComponent } from './pages/country/country.component';\nimport { CountriesComponent } from './pages/countries/countries.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryComponent,\n    CountriesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n\n<h1>Countries</h1>\n<hr>\n\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-action animated fadeIn fast\" *ngFor=\"let country of countries\">\n    <a [routerLink]=\"['/country', country.alpha3Code]\" >\n        {{ country.name }}\n    </a>\n  </li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { ICountry } from 'src/app/interfaces/country.interface';\nimport { CountriesService } from 'src/app/services/countries.service';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  countries: ICountry[] = [];\n\n  constructor(\n    public countriesService: CountriesService\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    this.countries = await this.countriesService.getCountries();\n\n    // console.log(this.countries);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CountriesComponent } from './pages/countries/countries.component';\nimport { CountryComponent } from './pages/country/country.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CountriesComponent,\n  },\n  {\n    path: 'country/:id',\n    component: CountryComponent,\n  },\n  {\n    path: '**',\n    component: CountriesComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}